services:
  - class: jbboehr\PHPStanLostInTranslation\LostInTranslationHelper
    arguments:
        baseLocale: %lostInTranslation.baseLocale%
        reportLikelyUntranslatedInBaseLocale: %lostInTranslation.reportLikelyUntranslatedInBaseLocale%
  - class: jbboehr\PHPStanLostInTranslation\TranslationLoader
    arguments:
        langPath: %lostInTranslation.langPath%
  - class: jbboehr\PHPStanLostInTranslation\LostInTranslationCollector
    tags:
      - phpstan.collector
  - class: jbboehr\PHPStanLostInTranslation\LostInTranslationRule
    tags:
    - phpstan.rules.rule
  - class: jbboehr\PHPStanLostInTranslation\DynamicTranslationStringRule
  - class: jbboehr\PHPStanLostInTranslation\InvalidReplacementRule
  - class: jbboehr\PHPStanLostInTranslation\UnusedTranslationStringRule

conditionalTags:
	jbboehr\PHPStanLostInTranslation\DynamicTranslationStringRule:
		phpstan.rules.rule: %lostInTranslation.disallowDynamicTranslationStrings%
	jbboehr\PHPStanLostInTranslation\InvalidReplacementRule:
		phpstan.rules.rule: %lostInTranslation.invalidReplacements%
	jbboehr\PHPStanLostInTranslation\UnusedTranslationStringRule:
		phpstan.rules.rule: %lostInTranslation.unusedTranslationStrings%

parametersSchema:
    lostInTranslation: structure([
        disallowDynamicTranslationStrings: bool(),
        baseLocale: schema(string(), nullable()),
        invalidReplacements: bool()
        langPath: schema(string(), nullable()),
        reportLikelyUntranslatedInBaseLocale: bool(),
        unusedTranslationStrings: bool()
    ])

parameters:
    lostInTranslation:
        disallowDynamicTranslationStrings: false
        baseLocale: null
        invalidReplacements: true
        langPath: null
        reportLikelyUntranslatedInBaseLocale: true
        unusedTranslationStrings: false
